name: Release

on:
  push:
    branches:
      - "master"

jobs:
  build-macos:
    runs-on: macos-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Install create-dmg
        run: brew install create-dmg

      - name: Install dependencies
        run: |
          cd ai-terminal
          npm ci

      - name: Import Code-Signing Certificates
        uses: apple-actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_P12_BASE64 }}
          p12-password: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_PASSWORD }}

      - name: Prepare Apple API Key
        run: |
          echo "${{ secrets.APPLE_API_KEY }}" > /tmp/apple_api_key.p8
          chmod 600 /tmp/apple_api_key.p8
          echo "APPLE_API_KEY=/tmp/apple_api_key.p8" >> $GITHUB_ENV

      - name: Build macOS Universal
        run: |
          cd ai-terminal
          chmod +x build-macos.sh
          ./build-macos.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APPLE_DEVELOPER_ID: ${{ secrets.APPLE_DEVELOPER_ID }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
          APPLE_API_ISSUER: ${{ secrets.APPLE_API_ISSUER }}

      - name: Upload macOS Artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-dmg
          path: ai-terminal/src-tauri/target/universal-apple-darwin/bundle/dmg/*.dmg

  build-linux:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies
        run: |
          cd ai-terminal
          npm ci

      - name: Install Linux build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev build-essential curl wget libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Build Linux DEB
        run: |
          cd ai-terminal
          chmod +x build-linux.sh
          ./build-linux.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-deb
          path: ai-terminal/src-tauri/target/release/bundle/deb/*.deb

  release:
    needs: [build-macos, build-linux]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Download macOS Artifact
        uses: actions/download-artifact@v4
        with:
          name: macos-dmg
          path: artifacts/macos

      - name: Download Linux Artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-deb
          path: artifacts/linux

      - name: Generate tag
        run: |
          cd ai-terminal
          VERSION=$(node -p "require('./package.json').version")
          echo "RELEASE_TAG=v${VERSION}" >> $GITHUB_ENV
          echo "RELEASE_VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Create and push tag
        run: |
          git tag ${{ env.RELEASE_TAG }}
          git push origin ${{ env.RELEASE_TAG }}

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          files: |
            artifacts/macos/*.dmg
            artifacts/linux/*.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Website Versions
        env:
          WEBSITE_REPO: AiTerminalFoundation/website
          GITHUB_TOKEN: ${{ secrets.HOMEBREW_TOKEN }}
        run: |
          # Clone the website repository
          git clone https://x-access-token:${GITHUB_TOKEN}@github.com/${WEBSITE_REPO}.git website
          cd website

          # Update versions.js with new version info
          VERSION="${{ env.RELEASE_VERSION }}"
          DMG_URL="https://github.com/AiTerminalFoundation/ai-terminal/releases/download/v${VERSION}/ai-terminal-${VERSION}.dmg"
          DEB_URL="https://github.com/AiTerminalFoundation/ai-terminal/releases/download/v${VERSION}/ai-terminal_${VERSION}_amd64.deb"
          
          # Create a temporary file with the updated content
          cat > versions.js << EOL
          const VERSION_INFO = {
              macos: {
                  version: '${VERSION}',
                  downloadUrl: '${DMG_URL}'
              },
              windows: {
                  version: '${VERSION}',
                  downloadUrl: '#',
                  isComingSoon: true
              },
              linux: {
                  version: '${VERSION}',
                  downloadUrl: '${DEB_URL}'
              }
          };
          EOL

          # Commit and push changes
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add versions.js
          git commit -m "Update ai-terminal version to v${VERSION}"
          git push

      - name: Update Homebrew Formula and Cask
        env:
          HOMEBREW_TAP_REPO: AiTerminalFoundation/homebrew-ai-terminal
          GITHUB_TOKEN: ${{ secrets.HOMEBREW_TOKEN }}
        run: |
          # Clone the tap repository
          git clone https://x-access-token:${GITHUB_TOKEN}@github.com/AiTerminalFoundation/homebrew-ai-terminal.git homebrew-tap
          cd homebrew-tap

          # Use the version from the environment
          VERSION="${{ env.RELEASE_VERSION }}"
          DMG_URL="https://github.com/AiTerminalFoundation/ai-terminal/releases/download/v${VERSION}/ai-terminal-${VERSION}.dmg"
          SHA256=$(curl -sL "${DMG_URL}" | shasum -a 256 | awk '{print $1}')

          # Update Formula/ai-terminal.rb
          sed -i '' "s/version \".*\"/version \"${VERSION}\"/" Formula/ai-terminal.rb
          sed -i '' "s|url \".*\"|url \"${DMG_URL}\"|" Formula/ai-terminal.rb
          sed -i '' "s/sha256 \".*\"/sha256 \"${SHA256}\"/" Formula/ai-terminal.rb

          # Update Casks/ai-terminal.rb
          sed -i '' "s/version \".*\"/version \"${VERSION}\"/" Casks/ai-terminal.rb
          sed -i '' "s|url \".*\"|url \"${DMG_URL}\"|" Casks/ai-terminal.rb
          sed -i '' "s/sha256 \".*\"/sha256 \"${SHA256}\"/" Casks/ai-terminal.rb

          # Commit and push changes
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add Formula/ai-terminal.rb Casks/ai-terminal.rb
          git commit -m "Update ai-terminal to v${VERSION}"
          git push
