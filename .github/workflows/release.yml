name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      
      - name: Update version in Cargo.toml
        run: |
          cd ai-terminal
          VERSION="${{ github.ref_name }}"
          VERSION_WITHOUT_V="${VERSION#v}"
          sed -i.bak "s/^version = .*/version = \"$VERSION_WITHOUT_V\"/" Cargo.toml
      
      - name: Setup Github user
        run: |
          git config --local user.name actions-user
          git config --local user.email "actions@github.com"
      
      - name: Add files to commit
        run: git add ai-terminal/Cargo.toml
      
      - name: Commit changes
        run: git commit -m "Update version to ${{ github.ref_name }}"
      
      - name: Push changes
        run: git push origin HEAD:main
      
      - uses: taiki-e/create-gh-release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  build-macos-packages:
    needs: create-release
    permissions: write-all
    strategy:
      matrix:
        include:
          - target: aarch64-apple-darwin
            os: macos-latest
            arch: arm64
          - target: x86_64-apple-darwin
            os: macos-latest
            arch: x86_64

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Build binary
        uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: ai-terminal
          target: ${{ matrix.target }}
          archive: ai-terminal-${{ matrix.target }}
          token: ${{ secrets.GITHUB_TOKEN }}
          include: LICENSE,README.md
          manifest_path: ./ai-terminal/Cargo.toml
      
      - name: Create App Bundle
        run: |
          cd ai-terminal
          mkdir -p AI-Terminal-${{ matrix.arch }}.app/Contents/{MacOS,Resources}
          cp target/${{ matrix.target }}/release/ai-terminal AI-Terminal-${{ matrix.arch }}.app/Contents/MacOS/
          cp run.sh AI-Terminal-${{ matrix.arch }}.app/Contents/MacOS/
          cp Info.plist AI-Terminal-${{ matrix.arch }}.app/Contents/
          chmod +x AI-Terminal-${{ matrix.arch }}.app/Contents/MacOS/run.sh
      
      - name: Create DMG
        run: |
          cd ai-terminal
          mkdir -p dist
          hdiutil create -volname "AI Terminal (${{ matrix.arch }})" -srcfolder AI-Terminal-${{ matrix.arch }}.app -ov -format UDZO dist/AI-Terminal-${{ matrix.arch }}.dmg
      
      - name: Upload DMG as Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: ai-terminal/dist/AI-Terminal-${{ matrix.arch }}.dmg
          token: ${{ secrets.GITHUB_TOKEN }}

  build-linux:
    needs: create-release
    permissions: write-all
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Install cross-compilation tools
        uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{ matrix.target }}
      
      - name: Build binary
        uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: ai-terminal
          target: ${{ matrix.target }}
          archive: ai-terminal-${{ matrix.target }}
          token: ${{ secrets.GITHUB_TOKEN }}
          include: LICENSE,README.md
          manifest_path: ./ai-terminal/Cargo.toml
      
      - name: Create Debian Package
        run: |
          cd ai-terminal
          mkdir -p dist/ai-terminal_linux-${{ matrix.target }}/usr/local/bin
          mkdir -p dist/ai-terminal_linux-${{ matrix.target }}/DEBIAN
          cp target/${{ matrix.target }}/release/ai-terminal dist/ai-terminal_linux-${{ matrix.target }}/usr/local/bin/
          chmod +x dist/ai-terminal_linux-${{ matrix.target }}/usr/local/bin/ai-terminal
          
          # Create control file
          VERSION=$(grep '^version' Cargo.toml | cut -d '"' -f2)
          ARCH="${{ matrix.target == 'aarch64-unknown-linux-gnu' && 'arm64' || 'amd64' }}"
          cat > dist/ai-terminal_linux-${{ matrix.target }}/DEBIAN/control << EOF
          Package: ai-terminal
          Version: $VERSION
          Section: utils
          Priority: optional
          Architecture: $ARCH
          Maintainer: AI Terminal Team
          Description: Your AI mate into your favourite terminal
          EOF
          
          # Build the package
          dpkg-deb --build dist/ai-terminal_linux-${{ matrix.target }} dist/ai-terminal-${{ matrix.target }}.deb
      
      - name: Upload Debian Package as Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: ai-terminal/dist/ai-terminal-${{ matrix.target }}.deb
          token: ${{ secrets.GITHUB_TOKEN }}

  build-windows:
    needs: create-release
    permissions: write-all
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Build binary
        uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: ai-terminal
          target: x86_64-pc-windows-msvc
          archive: ai-terminal-windows
          token: ${{ secrets.GITHUB_TOKEN }}
          include: LICENSE,README.md
          manifest_path: ./ai-terminal/Cargo.toml
      
      - name: Create Windows Package
        shell: pwsh
        run: |
          cd ai-terminal
          mkdir -p dist
          # Copy executable to dist folder
          Copy-Item -Path target/x86_64-pc-windows-msvc/release/ai-terminal.exe -Destination dist/
          
          # Create a simple batch file to run the application
          Set-Content -Path dist/run-ai-terminal.bat -Value "@echo off`nstart ai-terminal.exe"
          
          # Create a zip file
          Compress-Archive -Path dist/ai-terminal.exe, dist/run-ai-terminal.bat -DestinationPath dist/AI-Terminal-Windows.zip -Force
      
      - name: Upload Windows Package as Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: ai-terminal/dist/AI-Terminal-Windows.zip
          token: ${{ secrets.GITHUB_TOKEN }} 